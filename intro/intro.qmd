---
title: "Intro"
subtitle: "CIST"
author: "Nicolas Lambert ....."
date: 02/02/23
title-slide-attributes:
  data-background-color: black
  data-background-image: img/nice.jpg
  data-background-size: cover
  data-background-opacity: "0.5"
date-format: "DD MMM YYYY"
engine: knitr
execute:
  echo: true
  eval: true
format:
  revealjs:
    theme: [simple, custom.scss]
    incremental: false
    eval: true
    presentation-slide-text-align: center
    background-transition: fade
    controls: true
    auto-stretch: true
    code-overflow: wrap
    code-tools: true
---

# Test

## Les inputs


```{ojs}
data = FileAttachment("seattle-weather.csv")
  .csv({typed: true})
  
Plot.plot({
  width: 800, height: 500, padding: 0,
  color: { scheme: "blues", type: "sqrt"},
  y: { tickFormat: i => "JFMAMJJASOND"[i] },
  marks: [
    Plot.cell(data, Plot.group({fill: "mean"}, {
      x: d => d.date.getUTCDate(),
      y: d => d.date.getUTCMonth(),
      fill: "precipitation", 
      inset: 0.5
    }))
  ]
})
```



```{ojs}
//| echo: true
viewof intensity = Inputs.range([0, 100], {step: 1, label: "Intensity"})
```


```{ojs}
//| echo: true
a = 10
b = 20
```

## sssss

# Intro

https://observablehq.com/@tophtucker/classic-research-in-data-visualization

Cartes
Charts 
Cartes thématiques
Révolution quantitative en geo
Web
Exemples de geoviz
(shiny, webgl, d3, leaflet,...) 
Derrizr tout ces exemples, il y a un langage : le javascript 
Histoire du js. 
De js à ojs 
Principes 

Passe de R à ojs 

Histoire de la datviz. La carto + la data viz => la geoviz.
Apparition des ordi.
Du web, .
...

# Intro

Ce qu'on va faire. Apprendre à faire des cartes animés et interactives avec Observable javascript et bertin.js dans Quarto. Ce qu'on ne va pas faire : apprendre à programmer en javascript

# Javascript

Historique du web Avant le web était statique Creation de js Pas créé au départ pour la visu de données. Avantages. Inconvénients. Les déboires du début. Langage qui peut être étendu. Wasm. D3.

# Observable javascript

C'est une société. C'est une plate-forme. Dans quarto

# Principes


::: {.panel-tabset}

## toto

sss

## titi

dddd

## slksmlksml


sss


:::

## Les chunk ojs

```{{ojs}}
// Ecrire des trucs ici
```

## Les cellules et les variables

On définit les variables avec =

```{ojs}
//| echo: true
a = 10
b = 20
```

Ensuite, on peut utiliser ces variables pour faires des calculs

```{ojs}
//| echo: true
a + b
```


En Observable javascript, On peut ecrire le code dans n”importe quel ordre. On peut par exemple faire un calcul et définir les variables ensuite. 

```{ojs}
//| echo: true
c * d
c = 2
d = 17
```

C'est très déroutant mais extremement pratique. Car cela permet par exemple de positionner les figures au milieu d'un texte, et releguer tous les calculs dans une annexe technique à la fin du document. 

Cela à une implication. Chaque début de ligne doit définit une variable qui doit être unique. Si je crée 2 variables avec le même nom, le runtime d'Observable renvoit une erreur. 


```{ojs}
//| echo: true
e = "coucou"
e = "bonjour"
```

Mais on peut résoudre cela en utilisant des accolades. On retrouve alors le fonctionnement d'un code javascript normal.

```{ojs}
//| echo: true
{
let e = "coucou"
e = "bonjour"
return e
}
```

# Les inputs

https://github.com/observablehq/inputs

# xxx

```{ojs}
viewof bio = Inputs.textarea({label: "Biography", placeholder: "Tell us a little about yourself…"})
md`${bio}`
```

mettre sur une ligne

```{ojs}
//| panel: input
//| layout-ncol: 1
Inputs.toggle({label: "Mute"})
Inputs.radio(["red", "green", "blue"], {label: "Color"})
viewof intensity = Inputs.range([0, 100], {step: 1, label: "Intensity"})
```

```{ojs}
//| echo: false
intensity
```

# Import de données

voir aussi Inputs.table

Ensuite, on peut utiliser ces variables pour faires des calculs



Oj n'est pas que javascript. C'est du js mais dans lequel on a ajouté des librairies. Présenter de, plot,...

C'est aussi des choses spécifiques.

# Import de données.

...

# Le format json

# Les inputs.

...

# C'est réactif.

Un exemple avec un cercle ou un rectangle.

Donc certes, le js n'est pas pensé à la base pour la dataviz, mais qui a été étendu pour cela et qui le sera encore.

Quarto est un environnement multi langage. Combiner R et ojs. Passer des données. Dans la pratique, on pour très bien utiliser R pour l'analyse de donnés et ojs pour la visualisation.

# Biblio sur la dataviz
